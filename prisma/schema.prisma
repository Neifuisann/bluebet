// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String       @unique
  password      String
  image         String?
  isAdmin       Boolean      @default(false)
  credits       Int          @default(5)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  predictions   Prediction[]
}

model Team {
  id            String    @id @default(cuid())
  name          String    @unique
  logo          String?
  homeMatches   Match[]   @relation("HomeTeam")
  awayMatches   Match[]   @relation("AwayTeam")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Match {
  id            String       @id @default(cuid())
  homeTeamId    String
  homeTeam      Team         @relation("HomeTeam", fields: [homeTeamId], references: [id])
  awayTeamId    String
  awayTeam      Team         @relation("AwayTeam", fields: [awayTeamId], references: [id])
  kickoffTime   DateTime
  homeScore     Int?
  awayScore     Int?
  status        MatchStatus  @default(SCHEDULED)
  league        String
  predictions   Prediction[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Prediction {
  id            String    @id @default(cuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  matchId       String
  match         Match     @relation(fields: [matchId], references: [id])
  predictedHomeScore Int
  predictedAwayScore Int
  points        Int?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@unique([userId, matchId])
}

enum MatchStatus {
  SCHEDULED
  LIVE
  FINISHED
  CANCELLED
}
